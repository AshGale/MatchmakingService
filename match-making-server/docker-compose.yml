version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: matchmaker-db
    environment:
      POSTGRES_USER: matchmaker
      POSTGRES_PASSWORD: ${DB_PASSWORD:-securepassword}
      POSTGRES_DB: matchmaker
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U matchmaker"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - matchmaker-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: matchmaker-server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: matchmaker
      DB_PASSWORD: ${DB_PASSWORD:-securepassword}
      DB_NAME: matchmaker
      JWT_SECRET: ${JWT_SECRET:-localdevelopmentsecret}
      JWT_EXPIRES_IN: 3600
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-localdevelopmentrefreshsecret}
      REFRESH_TOKEN_EXPIRES_IN: 604800
      MAX_TURN_TIME: 300
    volumes:
      - ./server:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - matchmaker-network

  caddy:
    image: caddy:2-alpine
    container_name: matchmaker-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    networks:
      - matchmaker-network

networks:
  matchmaker-network:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config: